@model LV.Apresentacao.MVC.Models.VeiculoViewModel

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <h2>Cadastro de Veículos</h2>
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Fabricantes, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @{
                    if (Model.Fabricantes != null && Model.Fabricantes.Count > 0)
                    {
                        var fab = new List<SelectListItem> {
                            new SelectListItem { Text = "Selectione o fabricante", Value = "", Selected = true }
                        };

                        foreach (var item in Model.Fabricantes)
                        {
                            fab.Add(new SelectListItem { Text = item.Name, Value = item.Name });
                        }
                        @Html.DropDownList("Fabricante", fab, new { htmlAttributes = new { @class = "control-label col-md-2" } })
                    }
                    else
                    {
                        @Html.EditorFor(model => model.Fabricante, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Fabricante, "", new { @class = "text-danger" })
                    }
                }

            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Modelo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Modelo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Modelo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AnoModelo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.AnoModelo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.AnoModelo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Categoria, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @{
                    var categ = new List<SelectListItem> {
                        new SelectListItem { Text = "Selectione a categoria", Value = "0", Selected = true },
                        new SelectListItem { Text = "Compact Hatch", Value = "1"},
                        new SelectListItem { Text = "Medium Hatch", Value = "2" },
                        new SelectListItem { Text = "Sedan", Value = "3"},
                        new SelectListItem { Text = "Van", Value = "4"},
                        new SelectListItem { Text = "Pickup", Value = "5"}
                    };
                }
                @Html.DropDownList("Categoria", categ, new { htmlAttributes = new { @class = "control-label col-md-2" } })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Valor, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Valor, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Valor, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ValorFidelidade, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ValorFidelidade, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ValorFidelidade, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ValorFds, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ValorFds, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ValorFds, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ValorFidelidadeFds, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ValorFidelidadeFds, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ValorFidelidadeFds, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <button type="submit" id="Salvar" class="btn btn-sm btn-success" aria-label="Salvar" name="Salvar" value="Salvar">
                    <span class="glyphicon glyphicon-save" aria-hidden="true"></span>
                    Salvar
                </button>
            </div>
        </div>
    </div>
}

